name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  linters:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Cache yarn packages
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn

      - name: Install from network when no cache hit
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --ignore-optional --prefer-offline

      - name: Install from cache on cache-hit
        if: steps.yarn-cache.outputs.cache-hit == 'true'
        run: yarn install --ignore-optional --offline

      - name: Build package
        run: yarn build

      - name: Format and Lint check
        run: yarn fmt && yarn lint

  unit-tests:
    runs-on: ubuntu-latest
    needs: linters

    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [18, 20]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Cache yarn packages
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{matrix.node-version}}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.node-version}}-yarn

      - name: Install from network when no cache hit
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --ignore-optional --prefer-offline

      - name: Install from cache on cache-hit
        if: steps.yarn-cache.outputs.cache-hit == 'true'
        run: yarn install --ignore-optional --offline

      - name: Unit tests and Coverage
        run: yarn test --coverage
